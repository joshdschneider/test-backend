export declare type User = {
    userId: string;
    orgIdToOrgMemberInfo?: OrgIdToOrgMemberInfo;
};
export declare type Org = {
    orgId: string;
    name: string;
};
export declare type UserMetadata = {
    userId: string;
    email: string;
    emailConfirmed: boolean;
    username?: string;
    firstName?: string;
    lastName?: string;
    pictureUrl?: string;
    locked: boolean;
    enabled: boolean;
    mfaEnabled: boolean;
    createdAt: number;
    lastActiveAt: number;
    orgIdToOrgInfo?: OrgIdToOrgMemberInfo;
};
export declare enum UserRole {
    Member = 0,
    Admin = 1,
    Owner = 2
}
export declare type OrgMemberInfo = {
    orgId: string;
    orgName: string;
    urlSafeOrgName: string;
    userRole: UserRole;
};
export declare type UserAndOrgMemberInfo = {
    user: User;
    orgMemberInfo: OrgMemberInfo;
};
export declare type OrgIdToOrgMemberInfo = {
    [orgId: string]: OrgMemberInfo;
};
export declare type InternalOrgMemberInfo = {
    org_id: string;
    org_name: string;
    url_safe_org_name: string;
    user_role: string;
};
export declare type InternalUser = {
    user_id: string;
    org_id_to_org_member_info?: {
        [org_id: string]: InternalOrgMemberInfo;
    };
};
export declare function toUser(snake_case: InternalUser): User;
export declare function toOrgIdToOrgMemberInfo(snake_case?: {
    [org_id: string]: InternalOrgMemberInfo;
}): OrgIdToOrgMemberInfo | undefined;
export declare function toUserRole(userRole: string): UserRole;
